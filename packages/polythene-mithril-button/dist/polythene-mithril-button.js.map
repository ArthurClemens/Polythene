{"version":3,"file":"polythene-mithril-button.js","sources":["../src/TextButton.js","../src/RaisedButton.js","../src/index.js"],"sourcesContent":["// @ts-check\n\nimport { StateComponent } from \"polythene-mithril-base\";\nimport { coreButton as core } from \"polythene-core-button\";\nimport { Ripple } from \"polythene-mithril-ripple\";\nimport { Icon } from \"polythene-mithril-icon\";\nimport { Shadow } from \"polythene-mithril-shadow\";\n\nexport const TextButton = StateComponent(Object.assign(\n  {},\n  core,\n  {\n    createProps: (vnode, args) => core.createProps(vnode, Object.assign(args, { Ripple, Icon, Shadow })),\n    createContent: (vnode, args) => core.createContent(vnode, Object.assign(args, { Ripple, Icon, Shadow }))\n  }\n));\n\nTextButton[\"displayName\"] = \"TextButton\";\n","// @ts-check\n\nimport { StateComponentAssembly } from \"polythene-mithril-base\";\nimport { coreRaisedButton as core } from \"polythene-core-button\";\nimport { TextButton } from \"./TextButton\";\nimport { Shadow } from \"polythene-mithril-shadow\";\n\nexport const RaisedButton = StateComponentAssembly({\n  ...core,\n  createProps: (vnode, args) => core.createProps(vnode, {...args, Shadow}),\n  createContent: (vnode, args) => core.createContent(vnode, {...args, Shadow }),\n  component: TextButton\n});\n\nRaisedButton.displayName = \"RaisedButton\";\n","// @ts-check\n\n/**\n * @typedef {import(\"mithril\").Vnode} Vnode\n * @typedef {import(\"polythene-core-button\").Options} Options\n */\n\nimport { StateComponent, renderer as h } from \"polythene-mithril-base\";\nimport { TextButton } from \"./TextButton\";\nimport { RaisedButton } from \"./RaisedButton\";\n\nexport const Button = StateComponent({\n  /**\n   * @param {Vnode} vnode\n   * @param {Options} vnode.attrs\n   */\n  view: vnode =>\n    h(vnode.attrs.raised\n      ? RaisedButton\n      : TextButton,\n    vnode.attrs,\n    vnode.children)\n});\n\nButton[\"displayName\"] = \"Button\";\n"],"names":["TextButton","StateComponent","_extends","core","createProps","vnode","args","Ripple","Icon","Shadow","createContent","RaisedButton","StateComponentAssembly","component","displayName","Button","view","h","attrs","raised","children"],"mappings":"uxCAQO,IAAMA,EAAaC,iBAAeC,EACvC,GACAC,aACA,CACEC,YAAa,SAACC,EAAOC,UAASH,aAAKC,YAAYC,EAAOH,EAAcI,EAAM,CAAEC,OAAAA,SAAQC,KAAAA,OAAMC,OAAAA,aAC1FC,cAAe,SAACL,EAAOC,UAASH,aAAKO,cAAcL,EAAOH,EAAcI,EAAM,CAAEC,OAAAA,SAAQC,KAAAA,OAAMC,OAAAA,gBAIlGT,EAAU,YAAkB,iBCVfW,EAAeC,8BACvBT,oBACHC,YAAa,SAACC,EAAOC,UAASH,mBAAKC,YAAYC,OAAWC,GAAMG,OAAAA,aAChEC,cAAe,SAACL,EAAOC,UAASH,mBAAKO,cAAcL,OAAWC,GAAMG,OAAAA,aACpEI,UAAWb,KAGbW,EAAaG,YAAc,mBCHdC,EAASd,iBAAe,CAKnCe,KAAM,SAAAX,UACJY,WAAEZ,EAAMa,MAAMC,OACVR,EACAX,EACJK,EAAMa,MACNb,EAAMe,aAGVL,EAAM,YAAkB"}