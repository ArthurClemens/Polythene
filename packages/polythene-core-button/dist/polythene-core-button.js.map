{"version":3,"file":"polythene-core-button.js","sources":["../../polythene-core/dist/polythene-core.mjs","../../polythene-css-classes/button.js","../src/button.js","../src/raised-button.js"],"sourcesContent":["const isClient = typeof document !== \"undefined\";\nconst isServer = !isClient;\n\nconst evts = {\n  \"animation\": \"animationend\",\n  \"OAnimation\": \"oAnimationEnd\",\n  \"MozAnimation\": \"animationend\",\n  \"WebkitAnimation\": \"webkitAnimationEnd\"\n};\nconst getAnimationEndEvent = () => {\n  if (isClient) {\n    const el = document.createElement(\"fakeelement\");\n\n    for (let a in evts) {\n      if (el.style[a] !== undefined) {\n        return evts[a];\n      }\n    }\n  }\n};\n\nconst modes = {\n  hidden: \"hidden\",\n  visible: \"visible\",\n  exposing: \"exposing\",\n  hiding: \"hiding\"\n};\nconst Conditional = {\n  getInitialState: (vnode, createStream) => {\n    const attrs = vnode.attrs;\n\n    if (!attrs.didHide) {\n      return {};\n    }\n\n    const visible = attrs.permanent || attrs.show;\n    const mode = createStream(attrs.permanent ? modes.visible : visible ? modes.visible : modes.hidden);\n    return {\n      mode,\n      redrawOnUpdate: createStream.merge([mode])\n    };\n  },\n  onUpdate: ({\n    state,\n    attrs\n  }) => {\n    if (!attrs.didHide) {\n      return;\n    }\n\n    const mode = state.mode();\n\n    if (attrs.permanent) {\n      if (mode === modes.visible && attrs.show) {\n        state.mode(modes.exposing);\n      } else if (mode === modes.exposing && !attrs.show) {\n        state.mode(modes.hiding);\n      }\n    } else {\n      // \"normal\" type\n      if (mode === modes.hidden && attrs.show) {\n        state.mode(modes.visible);\n      } else if (mode === modes.visible && !attrs.show) {\n        state.mode(modes.hiding);\n      }\n    }\n  },\n  view: ({\n    state,\n    attrs\n  }, {\n    renderer: h\n  }) => {\n    const placeholder = h(\"span\", {\n      className: attrs.placeholderClassName\n    }); // No didHide callback passed: use normal visibility evaluation\n\n    if (!attrs.didHide) {\n      return attrs.permanent || attrs.inactive || attrs.show ? h(attrs.instance, attrs) : placeholder;\n    } // else: use didHide to reset the state after hiding\n\n\n    const mode = state.mode();\n    const visible = mode !== modes.hidden;\n    return visible ? h(attrs.instance, Object.assign({}, attrs, {\n      didHide: args => (attrs.didHide(args), state.mode(attrs.permanent ? modes.visible : modes.hidden))\n    }, mode === modes.hiding && {\n      show: true,\n      hide: true\n    })) : placeholder;\n  }\n};\nConditional.displayName = \"Conditional\";\n\nconst r = (acc, p) => (acc[p] = 1, acc);\n/* \nSeparately handled props:\n- class\n- element\n*/\n\n\nconst defaultAttrs = [// Universal\n\"key\", \"style\", \"href\", \"id\", // React\n\"tabIndex\", // Mithril\n\"tabindex\", \"oninit\", \"oncreate\", \"onupdate\", \"onbeforeremove\", \"onremove\", \"onbeforeupdate\"];\nconst filterSupportedAttributes = (attrs, {\n  add: addAttrs = [],\n  remove: removeAttrs = []\n} = {}) => {\n  const removeLookup = removeAttrs.reduce(r, {});\n  const supported = defaultAttrs.concat(addAttrs).filter(item => !removeLookup[item]).reduce(r, {});\n  return Object.keys(attrs).reduce((acc, key) => (supported[key] ? acc[key] = attrs[key] : null, acc), {});\n};\nconst unpackAttrs = attrs => typeof attrs === \"function\" ? attrs() : attrs;\n\nconst sizeClasses = classes => ({\n  small: classes.small,\n  regular: classes.regular,\n  medium: classes.medium,\n  large: classes.large,\n  fab: classes.fab\n});\n\nconst classForSize = (classes, size = \"regular\") => sizeClasses(classes)[size];\n\nconst isTouch = isServer ? false : \"ontouchstart\" in document.documentElement;\nconst pointerStartEvent = isTouch ? [\"touchstart\", \"click\"] : [\"click\"];\nconst pointerEndEvent = isTouch ? [\"click\", \"mouseup\"] : [\"mouseup\"];\nconst pointerStartMoveEvent = isTouch ? [\"touchstart\", \"mousedown\"] : [\"mousedown\"];\nconst pointerMoveEvent = isTouch ? [\"touchmove\", \"mousemove\"] : [\"mousemove\"];\nconst pointerEndMoveEvent = isTouch ? [\"touchend\", \"mouseup\"] : [\"mouseup\"];\n\nif (isClient) {\n  document.querySelector(\"html\").classList.add(isTouch ? \"pe-touch\" : \"pe-no-touch\");\n}\n\nconst listeners = {}; // https://gist.github.com/Eartz/fe651f2fadcc11444549\n\nconst throttle = (func, s = 0.05, context = isClient ? window : {}) => {\n  let wait = false;\n  return (...args) => {\n    const later = () => func.apply(context, args);\n\n    if (!wait) {\n      later();\n      wait = true;\n      setTimeout(() => wait = false, s);\n    }\n  };\n};\nconst subscribe = (eventName, listener, delay) => {\n  listeners[eventName] = listeners[eventName] || [];\n  listeners[eventName].push(delay ? throttle(listener, delay) : listener);\n};\nconst unsubscribe = (eventName, listener) => {\n  if (!listeners[eventName]) {\n    return;\n  }\n\n  const index = listeners[eventName].indexOf(listener);\n\n  if (index > -1) {\n    listeners[eventName].splice(index, 1);\n  }\n};\nconst emit = (eventName, event) => {\n  if (!listeners[eventName]) {\n    return;\n  }\n\n  listeners[eventName].forEach(listener => listener(event));\n};\n\nif (isClient) {\n  window.addEventListener(\"resize\", e => emit(\"resize\", e));\n  window.addEventListener(\"scroll\", e => emit(\"scroll\", e));\n  window.addEventListener(\"keydown\", e => emit(\"keydown\", e));\n  window.addEventListener(pointerEndEvent, e => emit(pointerEndEvent, e));\n}\n\n/*\nHelper module to manage multiple items of the same component type.\n*/\nconst Multi = ({\n  options: mOptions,\n  renderer\n}) => {\n  const items = []; // This is shared between all instances of a type (Dialog, Notification, ...)\n\n  let current;\n\n  const getInitialState = (vnode, createStream) => {\n    current = createStream(null);\n    return {\n      current,\n      redrawOnUpdate: createStream.merge([current])\n    };\n  };\n  /*\n  @param e: { id, eventName }\n  */\n\n\n  const onChange = e => {\n    if (!current) {\n      console.error(\"Cannot set state. Did you set a root element like Dialog to show instances?\"); // eslint-disable-line no-console\n    }\n\n    current(e.id);\n    emit(mOptions.name, e);\n  };\n\n  const itemIndex = id => {\n    const item = findItem(id);\n    return items.indexOf(item);\n  };\n\n  const removeItem = id => {\n    const index = itemIndex(id);\n\n    if (index !== -1) {\n      items.splice(index, 1);\n      onChange({\n        id,\n        name: \"removeItem\"\n      });\n    }\n  };\n\n  const replaceItem = (id, newItem) => {\n    const index = itemIndex(id);\n\n    if (index !== -1) {\n      items[index] = newItem;\n    }\n  };\n\n  const findItem = id => {\n    // traditional for loop for IE10\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].instanceId === id) {\n        return items[i];\n      }\n    }\n  };\n\n  const next = () => {\n    if (items.length) {\n      items[0].show = true;\n    }\n\n    onChange({\n      id: items.length ? items[0].instanceId : null,\n      name: \"next\"\n    });\n  };\n\n  const remove = (instanceId = mOptions.defaultId) => {\n    if (mOptions.queue) {\n      items.shift();\n      next();\n    } else {\n      removeItem(instanceId);\n    }\n  };\n\n  const removeAll = () => {\n    items.length = 0;\n    onChange({\n      id: null,\n      name: \"removeAll\"\n    });\n  };\n\n  const setPauseState = (pause, instanceId) => {\n    const item = findItem(instanceId);\n\n    if (item) {\n      item.pause = pause;\n      item.unpause = !pause;\n      onChange({\n        id: instanceId,\n        name: pause ? \"pause\" : \"unpause\"\n      });\n    }\n  };\n\n  const createItem = (itemAttrs, instanceId, spawn) => {\n    let resolveShow;\n    let resolveHide;\n    const attrs = unpackAttrs(itemAttrs);\n\n    const didShow = () => {\n      if (attrs.didShow) {\n        attrs.didShow(instanceId);\n      }\n\n      onChange({\n        id: instanceId,\n        name: \"didShow\"\n      });\n      return resolveShow(instanceId);\n    };\n\n    const showPromise = new Promise(resolve => resolveShow = resolve);\n\n    const didHide = () => {\n      if (attrs.didHide) {\n        attrs.didHide(instanceId);\n      }\n\n      onChange({\n        id: instanceId,\n        name: \"didHide\"\n      });\n      remove(instanceId);\n      return resolveHide(instanceId);\n    };\n\n    const hidePromise = new Promise(resolve => resolveHide = resolve);\n    return Object.assign({}, mOptions, {\n      instanceId,\n      spawn,\n      attrs: itemAttrs,\n      show: mOptions.queue ? false : true,\n      showPromise,\n      hidePromise,\n      didShow,\n      didHide\n    });\n  };\n\n  const count = () => items.length;\n\n  const pause = (instanceId = mOptions.defaultId) => setPauseState(true, instanceId);\n\n  const unpause = (instanceId = mOptions.defaultId) => setPauseState(false, instanceId);\n\n  const show = (attrs = {}, spawnOpts = {}) => {\n    const instanceId = spawnOpts.id || mOptions.defaultId;\n    const spawn = spawnOpts.spawn || mOptions.defaultId;\n    const item = createItem(attrs, instanceId, spawn);\n    onChange({\n      id: instanceId,\n      name: \"show\"\n    });\n\n    if (mOptions.queue) {\n      items.push(item);\n\n      if (items.length === 1) {\n        next();\n      }\n    } else {\n      const storedItem = findItem(instanceId);\n\n      if (!storedItem) {\n        items.push(item);\n      } else {\n        replaceItem(instanceId, item);\n      }\n    }\n\n    return item.showPromise;\n  };\n\n  const hide = (spawnOpts = {}) => {\n    const instanceId = spawnOpts.id || mOptions.defaultId;\n    const item = mOptions.queue && items.length ? items[0] : findItem(instanceId);\n\n    if (item) {\n      item.hide = true;\n    }\n\n    onChange({\n      id: instanceId,\n      name: \"hide\"\n    });\n    return item ? item.hidePromise : Promise.resolve(instanceId);\n  };\n\n  const clear = removeAll;\n\n  const view = ({\n    attrs\n  }) => {\n    const spawn = attrs.spawn || mOptions.defaultId;\n    const candidates = items.filter(item => item.show && item.spawn === spawn);\n\n    if (mOptions.htmlShowClass && isClient && document.documentElement) {\n      document.documentElement.classList[candidates.length ? \"add\" : \"remove\"](mOptions.htmlShowClass);\n    }\n\n    return !candidates.length ? renderer(mOptions.placeholder) // placeholder because we cannot return null\n    : renderer(mOptions.holderSelector, {\n      className: attrs.position === \"container\" ? \"pe-multiple--container\" : \"pe-multiple--screen\"\n    }, candidates.map(itemData => {\n      return renderer(mOptions.instance, Object.assign({}, {\n        fromMultipleClassName: mOptions.className,\n        fromMultipleClear: clear,\n        fromMultipleDidHide: itemData.didHide,\n        fromMultipleDidShow: itemData.didShow,\n        hide: itemData.hide,\n        holderSelector: mOptions.holderSelector,\n        instanceId: itemData.instanceId,\n        key: itemData.key,\n        pause: itemData.pause,\n        show: itemData.show,\n        spawnId: spawn,\n        transitions: mOptions.transitions,\n        unpause: itemData.unpause\n      }, unpackAttrs(itemData.attrs)));\n    }));\n  };\n\n  return {\n    clear,\n    count,\n    getInitialState,\n    hide,\n    pause,\n    remove,\n    show,\n    unpause,\n    view\n  };\n};\nMulti.displayName = \"Multi\";\n\nconst getStyle = ({\n  element,\n  selector,\n  pseudoSelector,\n  prop\n}) => {\n  const el = selector ? element.querySelector(selector) : element;\n\n  if (!el) {\n    return;\n  }\n\n  return el.currentStyle ? el.currentStyle[prop] : window.getComputedStyle ? document.defaultView.getComputedStyle(el, pseudoSelector).getPropertyValue(prop) : null;\n};\nconst stylePropCompare = ({\n  element,\n  selector,\n  pseudoSelector,\n  prop,\n  equals,\n  contains\n}) => {\n  const el = selector ? element.querySelector(selector) : element;\n\n  if (!el) {\n    return false;\n  }\n\n  if (equals !== undefined) {\n    return equals === document.defaultView.getComputedStyle(el, pseudoSelector).getPropertyValue(prop);\n  }\n\n  if (contains !== undefined) {\n    return document.defaultView.getComputedStyle(el, pseudoSelector).getPropertyValue(prop).indexOf(contains) !== -1;\n  }\n};\nconst isRTL = ({\n  element = document,\n  selector\n}) => stylePropCompare({\n  element,\n  selector,\n  prop: \"direction\",\n  equals: \"rtl\"\n});\nconst styleDurationToMs = durationStr => {\n  const parsed = parseFloat(durationStr) * (durationStr.indexOf(\"ms\") === -1 ? 1000 : 1);\n  return isNaN(parsed) ? 0 : parsed;\n};\n\n/*\nGeneric show/hide transition module\n*/\n\nconst DEFAULT_DURATION = .240;\nconst DEFAULT_DELAY = 0; // const TRANSITION =    \"both\";\n// See: transition\n\nconst show = opts => transition(opts, \"show\");\nconst hide = opts => transition(opts, \"hide\");\n/*\nopts:\n- el\n- duration\n- delay\n- showClass\n- transitionClass\n- before\n- show\n- hide\n- after\n- timingFunction\n\n- state (show, hide)\n*/\n\nconst transition = (opts, state) => {\n  const el = opts.el;\n\n  if (!el) {\n    return Promise.resolve();\n  } else {\n    return new Promise(resolve => {\n      const style = el.style;\n      const computedStyle = isClient ? window.getComputedStyle(el) : {};\n      const duration = opts.hasDuration ? opts.duration * 1000.0 : styleDurationToMs(computedStyle.transitionDuration);\n      const delay = opts.hasDelay ? opts.delay * 1000.0 : styleDurationToMs(computedStyle.transitionDelay);\n      const timingFunction = opts.timingFunction || computedStyle.transitionTimingFunction;\n\n      if (opts.transitionClass) {\n        const transitionClassElement = opts.transitionClassElement || el;\n        transitionClassElement.classList.add(opts.transitionClass);\n      }\n\n      const before = () => {\n        style.transitionDuration = \"0ms\";\n        style.transitionDelay = \"0ms\";\n        opts.before();\n      };\n\n      const maybeBefore = opts.before && state === \"show\" ? before : opts.before && state === \"hide\" ? before : null;\n      const after = opts.after ? () => opts.after() : null;\n\n      const applyTransition = () => {\n        style.transitionDuration = duration + \"ms\";\n        style.transitionDelay = delay + \"ms\";\n\n        if (timingFunction) {\n          style.transitionTimingFunction = timingFunction;\n        }\n\n        if (opts.showClass) {\n          const showClassElement = opts.showClassElement || el;\n          showClassElement.classList[state === \"show\" ? \"add\" : \"remove\"](opts.showClass);\n        }\n\n        if (opts.transition) {\n          opts.transition();\n        }\n      };\n\n      const doTransition = () => {\n        applyTransition();\n        setTimeout(() => {\n          if (after) {\n            after();\n          }\n\n          if (opts.transitionClass) {\n            const transitionClassElement = opts.transitionClassElement || el;\n            transitionClassElement.classList.remove(opts.transitionClass);\n            el.offsetHeight; // force reflow\n          }\n\n          resolve();\n        }, duration + delay);\n      };\n\n      const maybeDelayTransition = () => {\n        if (duration === 0) {\n          doTransition();\n        } else {\n          setTimeout(doTransition, 0);\n        }\n      };\n\n      if (maybeBefore) {\n        maybeBefore();\n        el.offsetHeight; // force reflow\n\n        setTimeout(() => {\n          maybeDelayTransition();\n        }, 0);\n      } else {\n        maybeDelayTransition();\n      }\n    });\n  }\n};\n\nconst transitionComponent = ({\n  isShow,\n  state,\n  attrs,\n  domElements,\n  beforeTransition,\n  afterTransition,\n  showClass,\n  transitionClass\n}) => {\n  if (state.transitioning()) {\n    return Promise.resolve();\n  }\n\n  state.transitioning(true);\n  state.visible(isShow ? true : false);\n\n  if (beforeTransition) {\n    beforeTransition();\n  }\n\n  const duration = attrs[isShow ? \"showDuration\" : \"hideDuration\"];\n  const delay = attrs[isShow ? \"showDelay\" : \"hideDelay\"];\n  const timingFunction = attrs[isShow ? \"showTimingFunction\" : \"hideTimingFunction\"];\n  const transitions = attrs.transitions;\n  const fn = isShow ? show : hide;\n  const opts1 = Object.assign({}, attrs, domElements, {\n    showClass,\n    transitionClass,\n    duration,\n    delay,\n    timingFunction\n  });\n  const opts2 = Object.assign({}, opts1, transitions && transitions[isShow ? \"show\" : \"hide\"](opts1));\n  const opts3 = Object.assign({}, opts2, {\n    duration: opts2.duration !== undefined ? opts2.duration : DEFAULT_DURATION,\n    hasDuration: opts2.duration !== undefined,\n    delay: opts2.delay !== undefined ? opts2.delay : DEFAULT_DELAY,\n    hasDelay: opts2.delay !== undefined\n  });\n  return fn(opts3).then(() => {\n    const id = state.instanceId;\n\n    if (attrs[isShow ? \"fromMultipleDidShow\" : \"fromMultipleDidHide\"]) {\n      attrs[isShow ? \"fromMultipleDidShow\" : \"fromMultipleDidHide\"](id); // when used with Multiple; this will call attrs.didShow / attrs.didHide\n    } else if (attrs[isShow ? \"didShow\" : \"didHide\"]) {\n      attrs[isShow ? \"didShow\" : \"didHide\"](id); // when used directly\n    }\n\n    if (afterTransition) {\n      afterTransition();\n    }\n\n    state.transitioning(false);\n  });\n};\n\nconst deprecation = (component, {\n  option,\n  newOption,\n  newComponent\n}) => (option && console.warn(`${component}: option '${option}' is deprecated and will be removed in later versions. Use '${newOption}' instead.`), // eslint-disable-line no-console\nnewComponent && !newOption && console.warn(`${component}: this component is deprecated and will be removed in later versions. Use '${newComponent}' instead.`), // eslint-disable-line no-console\nnewComponent && newOption && console.warn(`${component}: this component is deprecated and will be removed in later versions. Use '${newComponent}' with option '${newOption}' instead.`) // eslint-disable-line no-console\n);\n\nconst iconDropdownUp = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"dd-up-svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M7 14l5-5 5 5z\\\"/></svg>\";\nconst iconDropdownDown = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"dd-down-svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M7 10l5 5 5-5z\\\"/></svg>\";\n\nexport { getAnimationEndEvent, Conditional, filterSupportedAttributes, unpackAttrs, classForSize, isClient, isServer, isTouch, pointerStartEvent, pointerEndEvent, pointerStartMoveEvent, pointerMoveEvent, pointerEndMoveEvent, Multi, show, hide, transitionComponent, throttle, subscribe, unsubscribe, emit, getStyle, stylePropCompare, isRTL, styleDurationToMs, deprecation, iconDropdownUp, iconDropdownDown };\n","\nexport default {\n  component:        \"pe-text-button\",\n  super:            \"pe-button\",\n  row:              \"pe-button-row\",\n      \n  // elements      \n  content:          \"pe-button__content\",\n  label:            \"pe-button__label\",\n  textLabel:        \"pe-button__text-label\",\n  wash:             \"pe-button__wash\",\n  dropdown:         \"pe-button__dropdown\",\n      \n  // states      \n  border:           \"pe-button--border\",\n  contained:        \"pe-button--contained\",\n  disabled:         \"pe-button--disabled\",\n  dropdownClosed:   \"pe-button--dropdown-closed\",\n  dropdownOpen:     \"pe-button--dropdown-open\",\n  extraWide:        \"pe-button--extra-wide\",\n  hasDropdown:      \"pe-button--dropdown\",\n  highLabel:        \"pe-button--high-label\",\n  inactive:         \"pe-button--inactive\",\n  raised:           \"pe-button--raised\",\n  selected:         \"pe-button--selected\",\n  separatorAtStart: \"pe-button--separator-start\",\n};\n","import { filterSupportedAttributes, isClient, deprecation, iconDropdownDown } from \"polythene-core\";\nimport classes from \"polythene-css-classes/button\";\n\nexport const getElement = vnode =>\n  vnode.attrs.element || \"a\";\n\nexport const getInitialState = (vnode, createStream) => {\n  const dom = createStream(null);\n  const focus = createStream(false);\n  const inactive = createStream(false);\n  const mouseover = createStream(false);\n  return {\n    dom,\n    focus,\n    inactive,\n    mouseover,\n    redrawOnUpdate: createStream.merge([dom, focus, inactive])\n  };\n};\n\nexport const onMount = vnode => {\n  if (!vnode.dom) {\n    return;\n  }\n  const state = vnode.state;\n  const attrs = vnode.attrs;\n  if (attrs.borders !== undefined) {\n    deprecation(\"Button\", { option: \"borders\", newOption: \"border\" });\n  }\n  state.dom(vnode.dom);\n  \n  if (isClient) {\n    const handleInactivate = () => (\n      state.inactive(true),\n      setTimeout(() => (\n        state.inactive(false)\n      ), attrs.inactivate * 1000)\n    );\n\n    const onFocus = () => state.focus(!state.mouseover());\n    const onBlur = () => state.focus(false);\n    const onMouseOver = () => state.mouseover(true);\n    const onMouseOut = () => state.mouseover(false);\n    const onClick = handleInactivate;\n\n    vnode.dom.addEventListener(\"focus\", onFocus, false);\n    vnode.dom.addEventListener(\"blur\", onBlur, false);\n    vnode.dom.addEventListener(\"mouseover\", onMouseOver, false);\n    vnode.dom.addEventListener(\"mouseout\", onMouseOut, false);\n    vnode.dom.addEventListener(\"click\", onClick, false);\n\n    state.removeEventListeners = () => (\n      vnode.dom.removeEventListener(\"focus\", onFocus, false),\n      vnode.dom.removeEventListener(\"blur\", onBlur, false),\n      vnode.dom.removeEventListener(\"mouseover\", onBlur, false),\n      vnode.dom.removeEventListener(\"mouseout\", onMouseOut, false),\n      vnode.dom.removeEventListener(\"click\", onClick, false)\n    );\n  }\n};\n\nexport const onUnMount = vnode =>\n  vnode.state.removeEventListeners && vnode.state.removeEventListeners();\n\nexport const createProps = (vnode, { keys: k }) => {\n  const state = vnode.state;\n  const attrs = vnode.attrs;\n  const disabled = attrs.disabled;\n  const inactive = attrs.inactive || state.inactive();\n  const onClickHandler = attrs.events && attrs.events[k.onclick];\n  const onKeyUpHandler = (attrs.events && attrs.events[k.onkeyup]) || onClickHandler;\n\n  return Object.assign(\n    {}, \n    filterSupportedAttributes(attrs, { add: [k.formaction, \"type\"], remove: [\"style\"] }), // Set style on content, not on component\n    {\n      className: [\n        classes.super,\n        attrs.parentClassName || classes.component,\n        attrs.contained ? classes.contained : null,\n        attrs.raised ? classes.contained : null,\n        attrs.raised ? classes.raised : null,\n        attrs.selected ? classes.selected : null,\n        attrs.highLabel ? classes.highLabel : null,\n        attrs.extraWide ? classes.extraWide : null,\n        disabled ? classes.disabled : null,\n        inactive ? classes.inactive : null,\n        attrs.separatorAtStart ? classes.separatorAtStart : null,\n        (attrs.border || attrs.borders) ? classes.border : null,\n        attrs.dropdown ? classes.hasDropdown : null,\n        attrs.dropdown\n          ? attrs.dropdown.open\n            ? classes.dropdownOpen\n            : classes.dropdownClosed\n          : null,\n        attrs.tone === \"dark\" ? \"pe-dark-tone\" : null,\n        attrs.tone === \"light\" ? \"pe-light-tone\" : null,\n        attrs.className || attrs[k.class],\n      ].join(\" \")\n    },\n    attrs.events,\n    inactive ? null : {\n      [k.tabindex]: disabled || inactive\n        ? -1\n        : attrs[k.tabindex] || 0,\n      [k.onclick]: onClickHandler,\n      [k.onkeyup]: e => {\n        if (e.keyCode === 13 && state.focus()) {\n          state.focus(false);\n          if (onKeyUpHandler) {\n            onKeyUpHandler(e);\n          }\n        }\n      }\n    },\n    attrs.url,\n    disabled ? { disabled: true } : null\n  );\n};\n\nexport const createContent = (vnode, { renderer: h, keys: k, Ripple, Icon, Shadow }) => {\n  const state = vnode.state;\n  const attrs = vnode.attrs;\n  const noink = attrs.ink !== undefined && attrs.ink === false;\n  const disabled = attrs.disabled;\n  const children = attrs.children || vnode.children;\n  const label = attrs.content\n    ? attrs.content\n    : attrs.label !== undefined\n      ? typeof attrs.label === \"object\"\n        ? attrs.label\n        : h(\"div\",\n          { className: classes.label },\n          h(\"div\",\n            {\n              className: classes.textLabel,\n              style: attrs.textStyle\n            },\n            attrs.label\n          )\n        )\n      : children\n        ? children\n        : null;\n  const noWash = disabled || (attrs.wash !== undefined && !attrs.wash);\n  return h(\"div\",\n    {\n      [k.class]: classes.content,\n      style: attrs.style\n    },\n    [\n      h(Shadow, {\n        key: \"shadow\",\n        shadowDepth: attrs.shadowDepth !== undefined\n          ? attrs.shadowDepth\n          : 0,\n        animated: true\n      }),\n      // Ripple\n      disabled || noink || !Ripple || (h.displayName === \"react\" ? !state.dom() : false)\n        // somehow Mithril does not update when the dom stream is updated\n        ? null\n        : h(Ripple, Object.assign({},\n          {\n            key: \"ripple\",\n            target: state.dom()\n          },\n          attrs.ripple\n        )),\n      // hover\n      noWash ? null : h(\"div\", { key: \"wash\", className: classes.wash }),\n      label,\n      attrs.dropdown\n        ? h(Icon,\n          {\n            className: classes.dropdown,\n            key: \"dropdown\",\n            svg: { content: h.trust(iconDropdownDown) }\n          }\n        )\n        : null\n    ]\n  );\n};\n","import { isServer, pointerStartMoveEvent, pointerEndMoveEvent, deprecation } from \"polythene-core\";\n\n// Don't export 'getElement': it will be the wrapped Button component (set in polythene-xxx-button)\n\nconst MAX_SHADOW_DEPTH = 5;\n\nlet tapStart,\n  tapEndAll = () => {},\n  downButtons = [];\n\nconst animateZ = (which, vnode) => {\n  const shadowDepthBase = vnode.state.shadowDepthBase;\n  const increase = vnode.attrs.increase || 1;\n  const shadowDepth = vnode.state.shadowDepth();\n  const newShadowDepth = which === \"down\" && shadowDepthBase < MAX_SHADOW_DEPTH\n    ? Math.min(shadowDepthBase + increase, MAX_SHADOW_DEPTH)\n    : which === \"up\"\n      ? Math.max(shadowDepth - increase, shadowDepthBase)\n      : shadowDepth;\n  if (newShadowDepth !== shadowDepth) {\n    vnode.state.shadowDepth(newShadowDepth);\n  }\n};\n\nconst tapHandler = (which, vnode) => {\n  if (which === \"down\") {\n    downButtons.push(Object.assign({}, vnode));\n  }\n  const animateOnTap = vnode.attrs.animateOnTap !== false ? true : false;\n  if (animateOnTap) {\n    animateZ(which, vnode);\n  }\n};\n\nconst initTapEvents = vnode => {\n  if (isServer) return;\n  tapStart = () => tapHandler(\"down\", vnode);\n  tapEndAll = () => {\n    downButtons.map(buttonVnode =>\n      tapHandler(\"up\", buttonVnode));\n    downButtons = [];\n  };\n  pointerStartMoveEvent.forEach(evt =>\n    vnode.dom.addEventListener(evt, tapStart));\n  pointerEndMoveEvent.forEach(evt =>\n    document.addEventListener(evt, tapEndAll));\n};\n\nconst clearTapEvents = vnode => {\n  pointerStartMoveEvent.forEach(evt =>\n    vnode.dom.removeEventListener(evt, tapStart));\n  pointerEndMoveEvent.forEach(evt =>\n    document.removeEventListener(evt, tapEndAll));\n};\n\nexport const getInitialState = (vnode, createStream) => {\n  const attrs = vnode.attrs;\n  const shadowDepthBase = attrs.shadowDepth !== undefined\n    ? attrs.shadowDepth\n    : attrs.z !== undefined // deprecated\n      ? attrs.z\n      : 1; \n  const shadowDepth = createStream(shadowDepthBase);\n  const tapEventsInited = createStream(false);\n  return {\n    shadowDepthBase,\n    shadowDepth,\n    tapEventsInited,\n    redrawOnUpdate: createStream.merge([shadowDepth])\n  };\n};\n\nexport const onMount = vnode => {\n  if (!vnode.dom) {\n    return;\n  }\n  const state = vnode.state;\n  const attrs = vnode.attrs;\n  if (attrs.z !== undefined) {\n    deprecation(\"RaisedButton\", { option: \"z\", newOption: \"shadowDepth\" });\n  }\n  if (!state.tapEventsInited()) {\n    initTapEvents(vnode);\n    state.tapEventsInited(true);\n  }\n};\n\nexport const onUnMount = vnode => {\n  if (vnode.state.tapEventsInited()) {\n    clearTapEvents(vnode);\n  }\n};\n\nexport const createProps = vnode => {\n  const attrs = vnode.attrs;\n  const state = vnode.state;\n  const children = attrs.children || vnode.children || [];\n  return Object.assign(\n    {},\n    {\n      raised: true,\n      animateOnTap: false,\n      wash: attrs.wash !== undefined\n        ? attrs.wash\n        : false,\n      children\n    },\n    attrs,\n    {\n      shadowDepth: attrs.disabled ? 0 : state.shadowDepth(),\n    }\n  );\n};\n\nexport const createContent = vnode =>\n  vnode.children;\n"],"names":["isClient","document","isServer","r","acc","p","defaultAttrs","isTouch","documentElement","pointerEndEvent","pointerStartMoveEvent","pointerEndMoveEvent","querySelector","classList","add","listeners","emit","eventName","event","forEach","listener","window","addEventListener","e","deprecation","component","option","newOption","newComponent","console","warn","super","row","content","label","textLabel","wash","dropdown","border","contained","disabled","dropdownClosed","dropdownOpen","extraWide","hasDropdown","highLabel","inactive","raised","selected","separatorAtStart","vnode","attrs","element","createStream","dom","focus","mouseover","redrawOnUpdate","merge","state","undefined","borders","onFocus","onBlur","onMouseOver","onMouseOut","onClick","setTimeout","inactivate","removeEventListeners","removeEventListener","keys","k","onClickHandler","events","onclick","onKeyUpHandler","onkeyup","Object","assign","addAttrs","remove","removeAttrs","removeLookup","reduce","supported","concat","filter","item","key","filterSupportedAttributes","formaction","className","classes","parentClassName","open","tone","class","join","tabindex","keyCode","url","renderer","h","Ripple","Icon","Shadow","noink","ink","children","style","textStyle","noWash","shadowDepth","animated","displayName","target","ripple","svg","trust","tapStart","tapEndAll","downButtons","tapHandler","which","push","animateOnTap","shadowDepthBase","increase","newShadowDepth","Math","min","max","animateZ","z","tapEventsInited","map","buttonVnode","evt","initTapEvents","clearTapEvents"],"mappings":"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"}