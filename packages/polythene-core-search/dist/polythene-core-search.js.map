{"version":3,"file":"polythene-core-search.js","sources":["../../polythene-css-classes/search.js","../src/search.js"],"sourcesContent":["\nexport default {\n  component:       \"pe-search\",\n\n  // elements\n  content:         \"pe-search__content\",\n\n  // states\n  searchFullWidth: \"pe-search--full-width\",\n  searchInset:     \"pe-search--inset\",\n};\n","import { filterSupportedAttributes } from \"polythene-core\";\nimport classes from \"polythene-css-classes/search\";\n\nexport const getElement = vnode =>\n  vnode.attrs.element || \"div\";\n\nconst getNameOfState = state =>\n  state.focus && state.dirty\n    ? \"focus_dirty\"\n    : state.focus\n      ? \"focus\"\n      : state.dirty\n        ? \"dirty\"\n        : \"none\";\n\nexport const getInitialState = (vnode, createStream) => {\n  const searchState = createStream({});\n  return {\n    searchState\n  };\n};\n\nexport const createProps = (vnode, { keys: k }) => {\n  const attrs = vnode.attrs;\n  return Object.assign(\n    {},\n    filterSupportedAttributes(attrs),\n    {\n      className: [\n        classes.component,\n        attrs.fullWidth ? classes.searchFullWidth : classes.searchInset,\n        attrs.tone === \"dark\" ? \"pe-dark-tone\" : null,\n        attrs.tone === \"light\" ? \"pe-light-tone\" : null,\n        attrs.className || attrs[k.class],\n      ].join(\" \")\n    },\n    attrs.events\n  );\n};\n\nexport const createContent = (vnode, { renderer: h, TextField }) => {\n  const state = vnode.state;\n  const attrs = vnode.attrs;\n  const searchState = getNameOfState(state.searchState());\n  const buttons = (attrs.buttons || {})[searchState] || {};\n  const textfieldAttrs = attrs.textfield || {};\n  return h(\"div\",\n    { className: classes.content },\n    [\n      buttons.before,\n      h(TextField, Object.assign(\n        {},\n        textfieldAttrs,\n        {\n          key: \"input\",\n          onChange: newState => {\n            state.searchState(newState);\n            if (textfieldAttrs.onChange) {\n              textfieldAttrs.onChange(newState);\n            }\n          },\n        }\n      )),\n      buttons.after\n    ]\n  );\n};\n"],"names":["component","content","searchFullWidth","searchInset","vnode","attrs","element","createStream","searchState","keys","k","Object","assign","filterSupportedAttributes","className","classes","fullWidth","tone","class","join","events","renderer","h","TextField","state","focus","dirty","getNameOfState","buttons","textfieldAttrs","textfield","before","key","onChange","newState","after"],"mappings":"mQACe,CACbA,UAAiB,YAGjBC,QAAiB,qBAGjBC,gBAAiB,wBACjBC,YAAiB,oDCNOC,GACxBA,EAAMC,MAAMC,SAAW,sBAWM,CAACF,EAAOG,WAE9B,CACLC,YAFkBD,EAAa,kBAMR,CAACH,GAASK,KAAMC,YACnCL,EAAQD,EAAMC,aACbM,OAAOC,OACZ,GACAC,4BAA0BR,GAC1B,CACES,UAAW,CACTC,EAAQf,UACRK,EAAMW,UAAYD,EAAQb,gBAAkBa,EAAQZ,YACrC,SAAfE,EAAMY,KAAkB,eAAiB,KAC1B,UAAfZ,EAAMY,KAAmB,gBAAkB,KAC3CZ,EAAMS,WAAaT,EAAMK,EAAEQ,QAC3BC,KAAK,MAETd,EAAMe,uBAImB,CAAChB,GAASiB,SAAUC,EAAGC,UAAAA,YAC5CC,EAAQpB,EAAMoB,MACdnB,EAAQD,EAAMC,MACdG,EArCegB,CAAAA,GACrBA,EAAMC,OAASD,EAAME,MACjB,cACAF,EAAMC,MACJ,QACAD,EAAME,MACJ,QACA,OA8BYC,CAAeH,EAAMhB,eACnCoB,GAAWvB,EAAMuB,SAAW,IAAIpB,IAAgB,GAChDqB,EAAiBxB,EAAMyB,WAAa,UACnCR,EAAE,MACP,CAAER,UAAWC,EAAQd,SACrB,CACE2B,EAAQG,OACRT,EAAEC,EAAWZ,OAAOC,OAClB,GACAiB,EACA,CACEG,IAAK,QACLC,SAAUC,IACRV,EAAMhB,YAAY0B,GACdL,EAAeI,UACjBJ,EAAeI,SAASC,OAKhCN,EAAQO"}