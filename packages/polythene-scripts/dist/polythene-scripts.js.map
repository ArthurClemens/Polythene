{"version":3,"file":"polythene-scripts.js","sources":["../src/write-css.js"],"sourcesContent":["const autoprefixer = require(\"autoprefixer\");\nconst cssbeautify  = require(\"cssbeautify\");\nconst fs           = require(\"fs\");\nconst J2c          = require(\"j2c\");\nconst postcss      = require(\"postcss\");\nconst cssnano      = require(\"cssnano\");\nconst tar          = require(\"tar\");\n\nconst j2c = new J2c();\nconst COLOR_RED = \"\\x1b[31m\";\nconst COLOR_WHITE = \"\\x1b[37m\";\n\nconst makeStyleSheet = (...styles) =>\n  styles.reduce((acc, styleList) =>\n    // each style returns a list\n    Object.keys(styleList).length\n      ? (\n        styleList.forEach(style => {\n          const scoped = {\n            \"@global\": style\n          };\n          const sheet = j2c.sheet(scoped);\n          acc += sheet;      \n        }),\n        acc\n      )\n      : acc, \"\");\n\nconst beautifyCSS = cssString =>\n  cssbeautify(cssString, {\n    indent: \"  \"\n  });\n\nconst saveToFile = (path, cssString) => \n  fs.writeFileSync(path, cssString, \"ascii\", err => {  \n    // throws an error, you could also catch it here\n    if (err) throw err;\n  });\n\nexport const processCSS = ({ styles, path, autoPrefix }) => {\n  const cssString = styles.reduce((acc, current) => (\n    acc + makeStyleSheet(current)\n  ), \"\");\n  return { cssString, path, autoPrefix };\n};\n\nexport const writeCSS = ({ css, styles, path, autoPrefix, beautify, sourceMap=true, gzip }) => {\n  const cssString = css\n    ? css\n    : styles\n      ? styles.reduce((acc, current) => acc + makeStyleSheet(current), \"\")\n      : \"\";\n\n  const mapPath = `${path}.map`;\n\n  const plugins = [];\n  if (autoPrefix) {\n    plugins.push(autoprefixer());\n  }\n  plugins.push(cssnano({\n    preset:       \"default\",\n    reduceIdents: false,\n    zindex:       false,\n  }));\n\n  const options = sourceMap\n    ? {\n      from: undefined,\n      to:  path,\n      map: { inline: false }\n    }\n    : {};\n\n  postcss(plugins)\n    .process(cssString, options)\n    .then(result => {\n      result.warnings().forEach(warn => {\n        console.warn(COLOR_RED, \"Warning\", COLOR_WHITE, warn.toString()); // eslint-disable-line no-console\n      });\n      saveToFile(path, beautify ? beautifyCSS(result.css) : result.css);\n      if (gzip) {\n        tar.c(\n          { gzip: true },\n          [path]\n        ).pipe(fs.createWriteStream(`${path}.gz`));\n      }\n      if (sourceMap) {\n        saveToFile(mapPath, result.map);\n      }\n    });\n};\n\n"],"names":["autoprefixer","require","cssbeautify","fs","J2c","postcss","cssnano","tar","j2c","saveToFile","path","cssString","writeFileSync","err","css","styles","autoPrefix","beautify","sourceMap","gzip","reduce","acc","current","styleList","Object","keys","length","forEach","style","scoped","sheet","makeStyleSheet","mapPath","plugins","push","preset","reduceIdents","zindex","options","from","undefined","to","map","inline","process","then","result","warnings","warn","console","toString","indent","beautifyCSS","c","pipe","createWriteStream"],"mappings":"4LAAA,MAAMA,EAAeC,QAAQ,gBACvBC,EAAeD,QAAQ,eACvBE,EAAeF,QAAQ,MACvBG,EAAeH,QAAQ,OACvBI,EAAeJ,QAAQ,WACvBK,EAAeL,QAAQ,WACvBM,EAAeN,QAAQ,OAEvBO,EAAM,IAAIJ,EAyBVK,EAAa,CAACC,EAAMC,IACxBR,EAAGS,cAAcF,EAAMC,EAAW,QAASE,OAErCA,EAAK,MAAMA,eAUK,GAAGC,IAAAA,EAAKC,OAAAA,EAAQL,KAAAA,EAAMM,WAAAA,EAAYC,SAAAA,EAAUC,UAAAA,GAAU,EAAMC,KAAAA,YAC5ER,EAAYG,IAEdC,EACEA,EAAOK,OAAO,CAACC,EAAKC,IAAYD,EAtCjB,KAAIN,IACzBA,EAAOK,OAAO,CAACC,EAAKE,IAElBC,OAAOC,KAAKF,GAAWG,QAEnBH,EAAUI,QAAQC,UACVC,EAAS,WACFD,GAEPE,EAAQtB,EAAIsB,MAAMD,GACxBR,GAAOS,IAETT,GAEAA,EAAK,IAwBiCU,CAAeT,GAAU,IAC/D,IAEAU,KAAatB,QAEbuB,EAAU,GACZjB,GACFiB,EAAQC,KAAKlC,KAEfiC,EAAQC,KAAK5B,EAAQ,CACnB6B,OAAc,UACdC,cAAc,EACdC,QAAc,WAGVC,EAAUpB,EACZ,CACAqB,UAAMC,EACNC,GAAK/B,EACLgC,IAAK,CAAEC,QAAQ,IAEf,GAEJtC,EAAQ4B,GACLW,QAAQjC,EAAW2B,GACnBO,KAAKC,IACJA,EAAOC,WAAWpB,QAAQqB,IACxBC,QAAQD,KApEE,QAoEc,UAnEZ,QAmEoCA,EAAKE,cAEvDzC,EAAWC,EAAMO,EAnDHN,CAAAA,GAClBT,EAAYS,EAAW,CACrBwC,OAAQ,OAiDsBC,CAAYN,EAAOhC,KAAOgC,EAAOhC,KACzDK,GACFZ,EAAI8C,EACF,CAAElC,MAAM,GACR,CAACT,IACD4C,KAAKnD,EAAGoD,qBAAqB7C,SAE7BQ,GACFT,EAAWuB,EAASc,EAAOJ"}