{"version":3,"file":"polythene-core-notification.js","sources":["../../polythene-css-classes/notification.js","../src/notification.js"],"sourcesContent":["\nexport default {\n  component:      \"pe-notification\",\n\n  // elements\n  action:         \"pe-notification__action\",\n  content:        \"pe-notification__content\",\n  holder:         \"pe-notification__holder\",\n  placeholder:    \"pe-notification__placeholder\",\n  title:          \"pe-notification__title\",\n\n  // states\n  hasContainer:   \"pe-notification--container\",\n  horizontal:     \"pe-notification--horizontal\",\n  multilineTitle: \"pe-notification__title--multi-line\",\n  vertical:       \"pe-notification--vertical\",\n  visible:        \"pe-notification--visible\",\n};","import { filterSupportedAttributes, transitionComponent, isClient, isServer } from \"polythene-core\";\nimport { Timer } from \"polythene-utilities\";\nimport classes from \"polythene-css-classes/notification\";\n\nconst DEFAULT_TIME_OUT = 3;\n\nexport const getElement = vnode =>\n  vnode.attrs.element || \"div\";\n\nconst pause = state => {\n  state.paused(true);\n  if (state.timer) {\n    state.timer.pause();\n  }\n};\n\nconst unpause = state => {\n  state.paused(false);\n  if (state.timer) {\n    state.timer.resume();\n  }\n};\n\nconst stopTimer = state => {\n  if (state.timer) {\n    state.timer.stop();\n  }\n};\n\nconst transitionOptions = (state, attrs, isShow) => ({\n  isTransitioning: state.transitioning(),\n  setIsTransitioning: state.transitioning,\n  setIsVisible: state.visible,\n  instanceId: state.instanceId,\n  attrs,\n  isShow,\n  beforeTransition: isShow\n    ? () => stopTimer(state)\n    : () => stopTimer(state),\n  afterTransition: isShow\n    ? () => {\n      // set timer to hide in a few seconds\n      const timeout = attrs.timeout;\n      if (timeout === 0) {\n        // do not time out\n      } else {\n        const timeoutSeconds = timeout !== undefined\n          ? timeout\n          : DEFAULT_TIME_OUT;\n        state.timer.start(() => {\n          hideNotification(state, attrs);\n        }, timeoutSeconds);\n      }     \n    }\n    : null,\n  domElements: {\n    el: state.el,\n    containerEl: state.containerEl,\n  },\n  showClass: classes.visible,\n});\n\nconst showNotification = (state, attrs) =>\n  transitionComponent(transitionOptions(state, attrs, true));\n\nconst hideNotification = (state, attrs) =>\n  transitionComponent(transitionOptions(state, attrs, false));\n\nconst setTitleStyles = titleEl => {\n  if (isServer) return;\n  const height = titleEl.getBoundingClientRect().height;\n  const lineHeight = parseInt(window.getComputedStyle(titleEl).lineHeight, 10);\n  const paddingTop = parseInt(window.getComputedStyle(titleEl).paddingTop, 10);\n  const paddingBottom = parseInt(window.getComputedStyle(titleEl).paddingBottom, 10);\n  if (height > (lineHeight + paddingTop + paddingBottom)) {\n    titleEl.classList.add(classes.multilineTitle);\n  }\n};\n\nexport const getInitialState = (vnode, createStream) => {\n  const transitioning = createStream(false);\n  const paused = createStream(false);\n  const mounted = createStream(false);\n  const visible = createStream(false);\n  return {\n    cleanUp:        undefined,\n    containerEl:    undefined,\n    dismissEl:      undefined,\n    el:             undefined,\n    timer:          new Timer(),\n    paused,\n    transitioning,\n    visible,\n    mounted,\n    redrawOnUpdate: createStream.merge([visible])\n  };\n};\n\nexport const onMount = vnode => {\n  if (!vnode.dom) {\n    return;\n  }\n  const dom = vnode.dom;\n  const state = vnode.state;\n  const attrs = vnode.attrs;\n  state.el = dom;\n  const titleEl = state.el.querySelector(`.${classes.title}`);\n  if (titleEl) {\n    setTitleStyles(titleEl);\n  }\n  if (!state.containerEl && isClient) {\n    // attrs.holderSelector is passed as option to Multiple\n    state.containerEl = document.querySelector(attrs.containerSelector || attrs.holderSelector);\n  }\n  if (!state.containerEl && isClient) {\n    console.error(\"No container element found\"); // eslint-disable-line no-console\n  }\n  if (attrs.containerSelector && state.containerEl) {\n    state.containerEl.classList.add(classes.hasContainer);\n  }\n  if (attrs.show && !state.visible()) {\n    showNotification(state, attrs);\n  }\n  state.mounted(true);\n};\n\nexport const onUnMount = vnode => (\n  vnode.state.mounted(false)\n);\n\nexport const createProps = (vnode, { keys: k }) => {\n  const attrs = vnode.attrs;\n  return Object.assign(\n    {},\n    filterSupportedAttributes(attrs, { remove: [\"style\"] }), // style set in content, and set by show/hide transition\n    attrs.testId && { \"data-test-id\": attrs.testId },\n    {\n      className: [\n        classes.component,\n        attrs.fromMultipleClassName,\n        // classes.visible is set in showNotification though transition\n        attrs.tone === \"light\" ? null : \"pe-dark-tone\", // default dark tone\n        attrs.containerSelector ? classes.hasContainer : null,\n        attrs.layout === \"vertical\" ? classes.vertical : classes.horizontal,\n        attrs.tone === \"dark\" ? \"pe-dark-tone\" : null,\n        attrs.tone === \"light\" ? \"pe-light-tone\" : null,\n        attrs.className || attrs[k.class],\n      ].join(\" \"),\n      [k.onclick]: e => e.preventDefault()\n    }\n  );\n};\n\nexport const createContent = (vnode, { renderer: h }) => {\n  const state = vnode.state;\n  const attrs = vnode.attrs;\n  if (state.mounted() && !state.transitioning()) {\n    if (attrs.hide && state.visible()) {\n      hideNotification(state, attrs);\n    } else if (attrs.show && !state.visible()) {\n      showNotification(state, attrs);\n    }\n  }\n  if (attrs.pause && !state.paused()) {\n    pause(state, attrs);\n  } else if (attrs.unpause && state.paused()) {\n    unpause(state, attrs);\n  }\n\n  return h(\"div\",\n    {\n      className: classes.content,\n      style: attrs.style,\n    },\n    attrs.content || [\n      attrs.title\n        ? h(\"div\",\n          { className: classes.title },\n          attrs.title\n        )\n        : null,\n      attrs.action\n        ? h(\"div\",\n          { className: classes.action },\n          attrs.action\n        )\n        : null\n    ]\n  );\n};\n"],"names":["component","action","content","holder","placeholder","title","hasContainer","horizontal","multilineTitle","vertical","visible","stopTimer","state","timer","stop","transitionOptions","attrs","isShow","isTransitioning","transitioning","setIsTransitioning","setIsVisible","instanceId","beforeTransition","afterTransition","timeout","timeoutSeconds","undefined","start","hideNotification","domElements","el","containerEl","showClass","classes","showNotification","transitionComponent","vnode","element","createStream","paused","mounted","cleanUp","dismissEl","Timer","redrawOnUpdate","merge","dom","titleEl","querySelector","isServer","getBoundingClientRect","height","parseInt","window","getComputedStyle","lineHeight","paddingTop","paddingBottom","classList","add","setTitleStyles","isClient","document","containerSelector","holderSelector","console","error","show","k","keys","_extends","filterSupportedAttributes","remove","testId","className","fromMultipleClassName","tone","layout","class","join","onclick","e","preventDefault","h","renderer","hide","pause","unpause","resume","style"],"mappings":"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"}