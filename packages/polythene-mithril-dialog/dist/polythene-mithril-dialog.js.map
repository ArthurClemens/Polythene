{"version":3,"file":"polythene-mithril-dialog.js","sources":["../src/index.js"],"sourcesContent":["\nimport { cast, h, a, useState, useEffect, useRef, getRef, useReducer } from \"cyano-mithril\";\n// import { Multi } from \"polythene-core\";\nimport { _DialogComponent, openDialogsSelector, _show, _hide, _Dialog } from \"polythene-core-dialog\";\n// import classes from \"polythene-css-classes/dialog\";\nimport { DialogPane } from \"polythene-mithril-dialog-pane\";\nimport { Shadow } from \"polythene-mithril-shadow\";\n\nconst DialogComponent = cast(_DialogComponent, { h, a, useState, useEffect, useRef, getRef, useReducer, Shadow, Pane: DialogPane, openDialogsSelector });\n\nexport const Dialog = {\n  ..._Dialog,\n  show: _show({ DialogComponent }),\n  hide: _hide,\n  displayName: \"Dialog\"\n};\n\n// Object.getOwnPropertyNames(_Dialog)\n//   .forEach(p => Dialog[p] = _Dialog[p]);\n\n\n// const options = {\n//   name:           \"dialog\",\n//   htmlShowClass:  classes.open,\n//   defaultId:      \"default_dialog\",\n//   holderSelector: `div.${classes.holder}`,\n//   instance:       DialogInstance,\n//   placeholder:    `span.${classes.placeholder}`\n// };\n\n// const MultipleInstance = Multi({ options });\n// export const Dialog = cast(MultipleInstance.render, { h, useState, useEffect });\n// Object.getOwnPropertyNames(MultipleInstance)\n//   .filter(p => p !== \"render\")\n//   .forEach(p => Dialog[p] = MultipleInstance[p]);\n// Dialog[\"displayName\"] = \"Dialog\";\n"],"names":["DialogComponent","cast","_DialogComponent","h","a","useState","useEffect","useRef","getRef","useReducer","Shadow","Pane","DialogPane","openDialogsSelector","Dialog","_Dialog","show","_show","hide","_hide","displayName"],"mappings":"83BAQA,IAAMA,EAAkBC,OAAKC,mBAAkB,CAAEC,EAAAA,IAAGC,EAAAA,IAAGC,SAAAA,WAAUC,UAAAA,YAAWC,OAAAA,SAAQC,OAAAA,SAAQC,WAAAA,aAAYC,OAAAA,SAAQC,KAAMC,aAAYC,oBAAAA,wBAErHC,qVACRC,WACHC,KAAMC,QAAM,CAAEjB,gBAAAA,IACdkB,KAAMC,QACNC,YAAa"}