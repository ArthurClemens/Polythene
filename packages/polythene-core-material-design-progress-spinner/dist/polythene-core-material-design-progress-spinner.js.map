{"version":3,"file":"polythene-core-material-design-progress-spinner.js","sources":["../../polythene-css-classes/material-design-progress-spinner.js","../src/spinner.js"],"sourcesContent":["\nexport default {\n  component:          \"pe-md-progress-spinner\",\n\n  // elements\n  animation:          \"pe-md-progress-spinner__animation\",\n  circle:             \"pe-md-progress-spinner__circle\",\n  circleRight:        \"pe-md-progress-spinner__circle-right\",\n  circleLeft:         \"pe-md-progress-spinner__circle-left\"\n};\n","import { unpackAttrs, getStyle, styleDurationToMs } from \"polythene-core\";\nimport { easing } from \"polythene-utilities\";\nimport classes from \"polythene-css-classes/material-design-progress-spinner\";\n\nconst percentageValue = (min, max, percentage = 0) => min + ((max - min) * percentage);\n\nconst rotateCircle = (el, min, max, percentage) => {\n  const style = el.style;\n  style[\"transform\"] =\n    style[\"-webkit-transform\"] =\n    style[\"-moz-transform\"] =\n    style[\"-ms-transform\"] =\n    style[\"-o-transform\"] = \"rotate(\" + percentageValue(min, max, percentage) + \"deg)\";\n};\n\nconst animate = (stateEl, size, percentage) => {\n  const animationEl = stateEl.querySelector(\".\" + classes.animation);\n  const animationElStyle = animationEl.style;\n  if (percentage < 0.5) {\n    animationElStyle.clip = \"rect(0px, \" + size + \"px, \" + size + \"px, \" + size / 2 + \"px)\";\n  } else {\n    animationElStyle.clip = \"rect(auto, auto, auto, auto)\";\n  }\n  const leftCircle = stateEl.querySelector(\".\" + classes.circleLeft);\n  const rightCircle = stateEl.querySelector(\".\" + classes.circleRight);\n  leftCircle.style.clip = rightCircle.style.clip = \"rect(0px, \" + size / 2 + \"px, \" + size + \"px, \" + \"0px)\";\n  rotateCircle(rightCircle, 0, 180, Math.min(1, percentage * 2));\n  rotateCircle(leftCircle, 0, 360, percentage);\n};\n\nconst updateWithPercentage = ({ state, attrs, size }) => {\n  if (!state.dom) {\n    return;\n  }\n  if (state.animating()) {\n    return;\n  }\n  if (attrs.percentage === undefined) {\n    return;\n  }\n  const percentage = unpackAttrs(attrs.percentage);\n  const previousPercentage = state.percentage();\n  const easingFn = attrs.animated\n    ? easing.easeInOutQuad\n    : v => v;\n  if (attrs.animated && previousPercentage !== percentage) {\n    const el = state.dom;\n    const animationDuration = attrs.updateDuration !== undefined\n      ? attrs.updateDuration * 1000\n      : styleDurationToMs(getStyle({ element: el.querySelector(`.${classes.animation}`), prop: \"animation-duration\" }));\n    let start = null;\n    const step = timestamp => {\n      if (!start) start = timestamp;\n      const progress = timestamp - start;\n      const stepPercentage = 1.0 / animationDuration * progress;\n      const newPercentage = previousPercentage + stepPercentage * (percentage - previousPercentage);\n      animate(el, size, easingFn(newPercentage));\n      if (start && progress < animationDuration) {\n        window.requestAnimationFrame(step);\n      } else {\n        start = null;\n        state.percentage(percentage);\n        state.animating(false);\n      }\n    };\n    state.animating(true);\n    window.requestAnimationFrame(step);\n  } else {\n    animate(state.dom, size, easingFn(percentage));\n    state.percentage(percentage);\n  }\n};\n\nconst getSize = element => \n  Math.round(\n    element\n      ? parseFloat(getStyle({ element, prop: \"height\" })) - 2 * parseFloat(getStyle({ element, prop: \"padding\" }))\n      : 0\n  );\n\nexport const getInitialState = (vnode, createStream) => {\n  const percentage = createStream(0);\n  const animating = createStream(false);\n  return {\n    animating,\n    dom: undefined,\n    percentage,\n    redrawOnUpdate: createStream.merge([animating])\n  };\n};\n\nexport const onMount = vnode => {\n  if (!vnode.dom) {\n    return;\n  }\n  const state = vnode.state;\n  const attrs = vnode.attrs;\n  state.dom = vnode.dom;\n  const size = getSize(state.dom);\n  updateWithPercentage({ state, attrs, size });\n};\n\nexport const createProps = (vnode, { renderer: h }) => {\n  const state = vnode.state;\n  const attrs = vnode.attrs;\n  const size = getSize(state.dom);\n  updateWithPercentage({ state, attrs, size });\n\n  const content = h(\"div\",\n    {\n      key: \"content\",\n      className: classes.animation,\n      style: {\n        width: size + \"px\",\n        height: size + \"px\"\n      }\n    },\n    [\n      h(\"div\", {\n        key: \"left\",\n        className: [classes.circle, classes.circleLeft].join(\" \")\n      }),\n      h(\"div\", {\n        key: \"right\",\n        className: [classes.circle, classes.circleRight].join(\" \")\n      })\n    ]\n  );\n\n  return Object.assign(\n    {},\n    attrs,\n    {\n      className: [classes.component, attrs.className].join(\" \"),\n      content\n    }\n  );\n};\n"],"names":["component","animation","circle","circleRight","circleLeft","rotateCircle","el","min","max","percentage","style","percentageValue","animate","stateEl","size","animationElStyle","querySelector","classes","clip","leftCircle","rightCircle","Math","updateWithPercentage","state","attrs","dom","animating","undefined","unpackAttrs","previousPercentage","easingFn","animated","easing","easeInOutQuad","v","animationDuration","updateDuration","styleDurationToMs","getStyle","element","prop","start","window","requestAnimationFrame","step","timestamp","progress","getSize","round","parseFloat","vnode","createStream","redrawOnUpdate","merge","h","renderer","content","key","className","width","height","join","_extends"],"mappings":"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"}