{"version":3,"file":"polythene-core-selection-control.js","sources":["../../polythene-css-classes/selection-control.js","../src/selection-control.js","../src/view-control.js"],"sourcesContent":["\nexport default {\n  component: \"pe-control\",\n\n  // elements\n  formLabel: \"pe-control__form-label\",\n  input:     \"pe-control__input\",\n  label:     \"pe-control__label\",\n\n  // states\n  disabled:  \"pe-control--disabled\",\n  inactive:  \"pe-control--inactive\",\n  large:     \"pe-control--large\",\n  medium:    \"pe-control--medium\",\n  off:       \"pe-control--off\",\n  on:        \"pe-control--on\",\n  regular:   \"pe-control--regular\",\n  small:     \"pe-control--small\",\n\n  // control view elements\n  box:       \"pe-control__box\",\n  button:    \"pe-control__button\",\n\n  // control view states\n  buttonOff: \"pe-control__button--off\",\n  buttonOn:  \"pe-control__button--on\",\n};\n","import { filterSupportedAttributes, classForSize } from \"polythene-core\";\nimport classes from \"polythene-css-classes/selection-control\";\n\nexport const getElement = vnode =>\n  vnode.attrs.element || \"div\";\n\nconst currentState = (attrs, state) => {\n  const checked = attrs.checked !== undefined\n    ? attrs.checked\n    : state.checked();\n  const selectable = attrs.selectable !== undefined\n    ? attrs.selectable(checked)\n    : false;\n  const inactive = attrs.disabled || !selectable;\n  return { checked, inactive };\n};\n\nexport const getInitialState = (vnode, createStream, { keys: k }) => {\n  const attrs = vnode.attrs;\n  const isChecked = attrs.defaultChecked !== undefined\n    ? attrs.defaultChecked\n    : attrs.checked || false;\n  const checked = createStream(isChecked);\n\n  const notifyChange = (e, isChecked) => {\n    if (attrs.onChange) {\n      attrs.onChange({\n        event: e,\n        checked: isChecked,\n        value: attrs.value\n      });\n    } \n  };\n\n  const onChange = e => {\n    let isChecked = e.currentTarget.checked;\n    if (attrs.type === \"radio\") {\n      // do not set directly\n    } else {\n      checked(isChecked);\n    }\n    notifyChange(e, isChecked);\n  };\n\n  const toggle = e => {\n    const newChecked = !checked();\n    checked(newChecked);\n    notifyChange(e, newChecked);\n  };\n\n  const viewControlClickHandler = attrs.events && attrs.events[k.onclick];\n  const viewControlKeyDownHandler = attrs.events && attrs.events[k.onkeydown]\n    ? attrs.events[k.onkeydown]\n    : e => {\n      if (e.key === \"Enter\" || e.keyCode === 32) {\n        e.preventDefault();\n        if (viewControlClickHandler) {\n          viewControlClickHandler(e);\n        } else {\n          toggle(e);\n        }\n      }\n    };\n\n  return {\n    checked,\n    toggle,\n    onChange,\n    viewControlClickHandler,\n    viewControlKeyDownHandler,\n    redrawOnUpdate: createStream.merge([checked])\n  };\n};\n\nexport const createProps = (vnode, { keys: k }) => {\n  const attrs = vnode.attrs;\n  const state = vnode.state;\n  const { checked, inactive } = currentState(attrs, state);\n  return Object.assign(\n    {},\n    filterSupportedAttributes(attrs),\n    attrs.testId && { \"data-test-id\": attrs.testId },\n    {\n      className: [\n        classes.component,\n        attrs.instanceClass, // for instance pe-checkbox-control\n        checked ? classes.on : classes.off,\n        attrs.disabled ? classes.disabled : null,\n        inactive ? classes.inactive : null,\n        classForSize(classes, attrs.size),\n        attrs.tone === \"dark\" ? \"pe-dark-tone\" : null,\n        attrs.tone === \"light\" ? \"pe-light-tone\" : null,\n        attrs.className || attrs[k.class],\n      ].join(\" \")\n    }\n  );\n};\n\nexport const createContent = (vnode, { renderer: h, keys: k, ViewControl }) => {\n  const state = vnode.state;\n  const attrs = vnode.attrs;\n  const { checked, inactive } = currentState(attrs, state);\n  \n\n  return h(\"label\",\n    Object.assign(\n      {},\n      {\n        className: classes.formLabel,\n      },\n      state.viewControlClickHandler && {\n        [k.onclick]: e => (\n          e.preventDefault(),\n          state.viewControlClickHandler(e)\n        )\n      }\n    ),\n    [\n      h(ViewControl, Object.assign(\n        {},\n        attrs,\n        {\n          inactive,\n          checked,\n          key: \"control\",\n          events: {\n            // Only use key down event; click events are handled by input element\n            [k.onkeydown]: state.viewControlKeyDownHandler\n          }\n        }\n      )),\n      attrs.label\n        ? h(`.${classes.label}`,\n          { key: \"label\" },\n          attrs.label\n        )\n        : null,\n      h(\"input\", Object.assign(\n        {},\n        attrs.events,\n        {\n          name: attrs.name,\n          type: attrs.type,\n          value: attrs.value,\n          checked\n        },\n        attrs.disabled || inactive\n          ? { disabled: \"disabled\" }\n          : {\n            [k.onchange]: state.onChange\n          }\n      ))\n    ]\n  );\n};\n","import classes from \"polythene-css-classes/selection-control\";\n\nconst CONTENT = [\n  { iconType: \"iconOn\", className: classes.buttonOn},\n  { iconType: \"iconOff\", className: classes.buttonOff}\n];\n\nexport const getElement = vnode =>\n  vnode.attrs.element || `.${classes.box}`;\n\nconst createIcon = (h, iconType, attrs, className) => (\n  // if attrs.iconOn/attrs.iconOff is passed, use that icon options object and ignore size\n  // otherwise create a new object\n  Object.assign(\n    {},\n    {\n      className,\n      key: iconType\n    },\n    attrs[iconType]\n      ? attrs[iconType]\n      : { svg: { content: h.trust(attrs.icons[iconType]) } },\n    attrs.icon,\n    attrs.size\n      ? { size: attrs.size }\n      : null\n  )\n);\n\nexport const createContent = (vnode, { renderer: h, Icon, IconButton }) => {\n  const attrs = vnode.attrs;\n  return h(IconButton, Object.assign(\n    {},\n    {\n      element: \"div\",\n      className: classes.button,\n      content: CONTENT.map(o =>\n        h(Icon, createIcon(h, o.iconType, attrs, o.className))\n      ),\n      ripple: { center: true },\n      disabled: attrs.disabled,\n      events: attrs.events,\n      inactive: attrs.inactive\n    },\n    attrs.iconButton // for example for hover behaviour\n  ));\n};\n"],"names":["component","formLabel","input","label","disabled","inactive","large","medium","off","on","regular","small","box","button","buttonOff","buttonOn","currentState","attrs","state","checked","undefined","selectable","vnode","element","createStream","k","keys","defaultChecked","notifyChange","e","isChecked","onChange","event","value","toggle","newChecked","viewControlClickHandler","events","onclick","viewControlKeyDownHandler","onkeydown","key","keyCode","preventDefault","currentTarget","type","redrawOnUpdate","merge","_extends","filterSupportedAttributes","testId","className","classes","instanceClass","classForSize","size","tone","class","join","h","renderer","ViewControl","name","onchange","CONTENT","iconType","Icon","IconButton","content","map","o","svg","trust","icons","icon","createIcon","ripple","center","iconButton"],"mappings":"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"}